name: Deploy to EC2 / Docker Cleanup

on:
  push:
    branches:
      - main
      - 46-consolidate-dockerized-deployment

  schedule:
    - cron: '0 0 * * *' # Run every day at 00:00 UTC

jobs:
  DeployToEC2:
    name: Deploy API to EC2
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
      - name: Build and Deploy
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIV_KEY_PEM }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          openssl rsa -in private_key -check
          cat ${{ secrets.DEPLOYMENT_CONFIG }} > deployment_config_cloud.json
          cat deployment_config_cloud.json
          scp -o StrictHostKeyChecking=no -i private_key ./deployment_config_cloud.json ${USERNAME}@${HOST}:$HOME/deployment_config_cloud.json
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} '
            echo "Pulling latest changes from GitHub"
            rm -rf $HOME/LivekitMMLADeployment && cd $HOME
            mkdir LivekitMMLADeployment && cd LivekitMMLADeployment
            git clone git@github.com:oele-isis-vanderbilt/LiveKitMMLA.git
            cd LiveKitMMLA
            mv $HOME/deployment_config_cloud.json > deployment_config_cloud.json
          '

      - name: Docker Cleanup on EC2
        if: github.event_name == 'schedule'
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIV_KEY_PEM }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          openssl rsa -in private_key -check
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} '
            sudo chmod 666 /var/run/docker.sock
            docker system prune -f
          '
